services:
  db:
    image: postgres:17-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: KnowledgeManagementSystem
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: KnowledgeManagementSystem.API/Dockerfile
    container_name: kms_api
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=KnowledgeManagementSystem;Username=postgres;Password=postgres

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"

volumes:
  pgdata:
